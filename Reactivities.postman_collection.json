{
	"info": {
		"_postman_id": "3bc3d5e5-3170-4146-855a-59a314862999",
		"name": "Reactivities",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26799879"
	},
	"item": [
		{
			"name": "Module 2",
			"item": [
				{
					"name": "Get Weather Forecast",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/weatherforecast",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"weatherforecast"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Activities",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/activities",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Activity",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/activities/147c5e3e-26ee-466c-989a-dfce8cd70242",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities",
								"147c5e3e-26ee-466c-989a-dfce8cd70242"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Module 4",
			"item": [
				{
					"name": "Get Activities",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/activities",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Activity",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/activities/d2e09631-63a5-49a2-b956-e29f32249557",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities",
								"d2e09631-63a5-49a2-b956-e29f32249557"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Activity",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var moment = require(\"moment\");\r",
									"\r",
									"pm.environment.set('activityDate', moment().add(14, 'days').toISOString());"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id\": \"{{$guid}}\",\n\t\"title\": \"Test Create Activity\",\n\t\"description\": \"Description of the test event\",\n\t\"category\": \"Culture\",\n\t\"date\": \"{{activityDate}}\",\n\t\"city\": \"London\",\n\t\"venue\": \"Tower of London\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/activities/",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit Activity",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var moment = require(\"moment\");\r",
									"\r",
									"pm.environment.set('activityDate', moment().add(14, 'days').toISOString());"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"Past Activity 1 updated\",\n\t\"description\": \"Description of the test event updated 4\",\n\t\"category\": \"Culture\",\n\t\"date\": \"{{activityDate}}\",\n\t\"city\": \"London\",\n\t\"venue\": \"Tower of London updated\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/activities/d2e09631-63a5-49a2-b956-e29f32249557",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities",
								"d2e09631-63a5-49a2-b956-e29f32249557"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Activity",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/activities/d2e09631-63a5-49a2-b956-e29f32249557",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities",
								"d2e09631-63a5-49a2-b956-e29f32249557"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Module 10",
			"item": [
				{
					"name": "Get non existant activity",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/activities/d51e33de-105b-4549-96d9-8ba2c7b05a30",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities",
								"d51e33de-105b-4549-96d9-8ba2c7b05a30"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Empty Activity",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "{{url}}/api/activities",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit an Activity missing fields",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/activities/795fead9-2476-4995-97e6-da5ee20b95f5",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities",
								"795fead9-2476-4995-97e6-da5ee20b95f5"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit an Activity correct",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var moment = require(\"moment\");\r",
									"\r",
									"pm.environment.set('activityDate', moment().add(14, 'days').toISOString());"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"Test Create Activity updated\",\n\t\"description\": \"Description of the test event\",\n\t\"category\": \"Culture\",\n\t\"date\": \"2024-03-04T20:19:21.192\",\n\t\"city\": \"London\",\n\t\"venue\": \"Tower of London\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/activities/e87835ac-5897-4b0d-9594-e00358fc563d",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities",
								"e87835ac-5897-4b0d-9594-e00358fc563d"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Values 404 example",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/values/666",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"values",
								"666"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete non existent activity",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/activities/d51e33de-105b-4549-96d9-8ba2c7b05a30",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities",
								"d51e33de-105b-4549-96d9-8ba2c7b05a30"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Module 12",
			"item": [
				{
					"name": "Get Activites Test Base Controller no auth",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/activities",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login user successful",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"bob@test.com\",\n\t\"password\": \"Pa$$w0rd\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/account/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login user validation error",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"bob@test.com\",\n\t\"password\": \"\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/account/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login user bad password",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"bob@test.com\",\n\t\"password\": \"badpassword\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/account/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login user bad email",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"fake@test.com\",\n\t\"password\": \"Pa$$w0rd\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/account/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Activites no auth",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/activities",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Activity no auth",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/activities/1ddce68b-02dd-4c5c-83c0-6d5c2d74acb4",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities",
								"1ddce68b-02dd-4c5c-83c0-6d5c2d74acb4"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Activity with auth",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6ImJvYiIsIm5hbWVpZCI6IjUxNjYxMTFmLTFiN2QtNDMwOC04NzJjLWY0OTJiYjg4ZDZmZiIsImVtYWlsIjoiYm9iQHRlc3QuY29tIiwibmJmIjoxNzA5NTYzNzUxLCJleHAiOjE3MTAxNjg1NTEsImlhdCI6MTcwOTU2Mzc1MX0.rBk--UxP9SW0JgC_aiD_4ShU0huBcDXIBCqDqxU-JKucjwfK6LrtUSvSreSVXHE_f_Tkms3sdgBe7Gmd3PtAiw",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/activities/1ddce68b-02dd-4c5c-83c0-6d5c2d74acb4",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities",
								"1ddce68b-02dd-4c5c-83c0-6d5c2d74acb4"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register user successfull",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"jim2@test.com\",\n\t\"username\": \"jim2\",\n\t\"displayName\": \"James\",\n\t\"password\": \"Pa$$w0rd\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/account/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register user validation error",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"sally@test.com\",\n\t\"username\": \"sally\",\n\t\"password\": \"Pa$$w0rd\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/account/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register user duplicate email",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"bob@test.com\",\n\t\"username\": \"fakebob\",\n\t\"displayName\": \"Bob\",\n\t\"password\": \"Pa$$w0rd\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/account/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register user duplicate username",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"fakebob@test.com\",\n\t\"username\": \"bob\",\n\t\"displayName\": \"FakeBob\",\n\t\"password\": \"Pa$$w0rd\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/account/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register user weak password",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"letmein@test.com\",\n\t\"username\": \"LetMeIn\",\n\t\"displayName\": \"Let Me In\",\n\t\"password\": \"letmein\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/account/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get current user",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6ImJvYiIsIm5hbWVpZCI6IjUxNjYxMTFmLTFiN2QtNDMwOC04NzJjLWY0OTJiYjg4ZDZmZiIsImVtYWlsIjoiYm9iQHRlc3QuY29tIiwibmJmIjoxNzA5NTY5MDAwLCJleHAiOjE3MTAxNzM4MDAsImlhdCI6MTcwOTU2OTAwMH0.r1iVY7wMa_50SfaLtCUKoA4yxo7JzjqEZ5jWhvzoTrn1_g80bW1CgUB7yUA1oQvQ609SEGejRqfyh5-KA6_-6A"
							}
						],
						"url": {
							"raw": "{{url}}/api/account",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Module 14",
			"item": [
				{
					"name": "Login as bob and save token to env",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const user = pm.response.json();",
									"",
									"pm.test(\"Has properties\", function () {",
									"    pm.expect(user).to.have.property('displayName');",
									"    pm.expect(user).to.have.property('username');",
									"    pm.expect(user).to.have.property('image');",
									"    pm.expect(user).to.have.property('token');",
									"});",
									"",
									"if (pm.test(\"Has properties\")) {",
									"    pm.globals.set('token', user.token);",
									"}",
									"",
									"pm.test(\"Global token has been set\", function() {",
									"    var token = pm.globals.get('token');",
									"    pm.expect(token).to.eql(user.token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"bob@test.com\",\n\t\"password\": \"Pa$$w0rd\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/account/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Activity current user host",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// response to be 200",
									"pm.test(\"response is ok\", function() {",
									"    pm.response.to.have.status(200)",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var moment = require(\"moment\");\r",
									"\r",
									"pm.environment.set('activityDate', moment().add(14, 'days').toISOString());"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id\": \"{{$guid}}\",\n\t\"title\": \"Test event with bob as host\",\n\t\"description\": \"Description of the test event\",\n\t\"category\":\"drinks\",\n\t\"date\": \"{{activityDate}}\",\n\t\"city\": \"London\",\n\t\"venue\": \"London venue\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/activities",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Activities",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"",
									"// response to be 200",
									"pm.test(\"response is 200\", function() {",
									"    pm.response.to.have.status(200)",
									"});",
									"",
									"pm.test(\"has all properties\", function() {",
									"    pm.expect(data[0]).to.have.property('id');",
									"    pm.expect(data[0]).to.have.property('title');",
									"    pm.expect(data[0]).to.have.property('description');",
									"    pm.expect(data[0]).to.have.property('date');",
									"    pm.expect(data[0]).to.have.property('city');",
									"    pm.expect(data[0]).to.have.property('venue');",
									"    pm.expect(data[0]).to.have.property('attendees');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/activities",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Activity Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"",
									"// response to be 200",
									"pm.test(\"response is created\", function() {",
									"    pm.response.to.have.status(200)",
									"});",
									"",
									"pm.test(\"has all properties\", function() {",
									"    pm.expect(data).to.have.property('id');",
									"    pm.expect(data).to.have.property('title');",
									"    pm.expect(data).to.have.property('description');",
									"    pm.expect(data).to.have.property('date');",
									"    pm.expect(data).to.have.property('city');",
									"    pm.expect(data).to.have.property('venue');",
									"    pm.expect(data).to.have.property('attendees');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/activities/7fe54731-c45b-460f-97f4-81a9df8c684a",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities",
								"7fe54731-c45b-460f-97f4-81a9df8c684a"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add attendance as bob",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"",
									"// response to be 200",
									"pm.test(\"response is 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/activities/01297c18-3be9-4bf6-95ce-318140608a05/attend",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities",
								"01297c18-3be9-4bf6-95ce-318140608a05",
								"attend"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update attendance as tom",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{tom_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/activities/7fe54731-c45b-460f-97f4-81a9df8c684a/attend",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities",
								"7fe54731-c45b-460f-97f4-81a9df8c684a",
								"attend"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove attendance for user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"",
									"// response to be 200",
									"pm.test(\"response is 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/activities/a172ad68-5022-40f5-a2d2-801020f7839a/attend",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities",
								"a172ad68-5022-40f5-a2d2-801020f7839a",
								"attend"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cancel activity by host",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"",
									"// response to be 200",
									"pm.test(\"response is 400\", function() {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/activities/403c8e3c-4cb6-4214-9dd0-890f18e09182/attend",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities",
								"403c8e3c-4cb6-4214-9dd0-890f18e09182",
								"attend"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as tom and save token to env",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const user = pm.response.json();",
									"",
									"pm.test(\"Has properties\", function () {",
									"    pm.expect(user).to.have.property('displayName');",
									"    pm.expect(user).to.have.property('username');",
									"    pm.expect(user).to.have.property('image');",
									"    pm.expect(user).to.have.property('token');",
									"});",
									"",
									"if (pm.test(\"Has properties\")) {",
									"    pm.globals.set('tom_token', user.token);",
									"}",
									"",
									"pm.test(\"Global token has been set\", function() {",
									"    var token = pm.globals.get('tom_token');",
									"    pm.expect(token).to.eql(user.token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"tom@test.com\",\n\t\"password\": \"Pa$$w0rd\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/account/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit an Activity as Bob who is host",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var moment = require(\"moment\");\r",
									"\r",
									"pm.environment.set('activityDate', moment().add(14, 'days').toISOString());"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"Editing activity as bob the host 2 updated\",\n\t\"description\": \"Description of the test event\",\n\t\"category\": \"Culture\",\n\t\"date\": \"{{activityDate}}\",\n\t\"city\": \"London\",\n\t\"venue\": \"Tower of London\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/activities/7fe54731-c45b-460f-97f4-81a9df8c684a",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities",
								"7fe54731-c45b-460f-97f4-81a9df8c684a"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit an Activity as Tom not host",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var moment = require(\"moment\");\r",
									"\r",
									"pm.environment.set('activityDate', moment().add(14, 'days').toISOString());"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{tom_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"Editing activity as tom - not host should fail with 403\",\n\t\"description\": \"Description of the test event\",\n\t\"category\": \"Culture\",\n\t\"date\": \"{{activityDate}}\",\n\t\"city\": \"London\",\n\t\"venue\": \"Tower of London\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/activities/7fe54731-c45b-460f-97f4-81a9df8c684a",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities",
								"7fe54731-c45b-460f-97f4-81a9df8c684a"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete activity as Tom not host",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{tom_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/activities/7fe54731-c45b-460f-97f4-81a9df8c684a",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities",
								"7fe54731-c45b-460f-97f4-81a9df8c684a"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete activity as Bob host",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/activities/7fe54731-c45b-460f-97f4-81a9df8c684a",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities",
								"7fe54731-c45b-460f-97f4-81a9df8c684a"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Module 16",
			"item": [
				{
					"name": "Login as bob and save token to env",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const user = pm.response.json();",
									"",
									"pm.test(\"Has properties\", function () {",
									"    pm.expect(user).to.have.property('displayName');",
									"    pm.expect(user).to.have.property('username');",
									"    pm.expect(user).to.have.property('image');",
									"    pm.expect(user).to.have.property('token');",
									"});",
									"",
									"if (pm.test(\"Has properties\")) {",
									"    pm.globals.set('token', user.token);",
									"}",
									"",
									"pm.test(\"Global token has been set\", function() {",
									"    var token = pm.globals.get('token');",
									"    pm.expect(token).to.eql(user.token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"bob@test.com\",\n\t\"password\": \"Pa$$w0rd\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/account/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Photo",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "File",
									"type": "file",
									"src": "/e/media/wallpapers/gintama_kamui_03.png"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/photos",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"photos"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get current user",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/account",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Photo",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/photos/aajis9wqsrfrvjygt658",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"photos",
								"aajis9wqsrfrvjygt658"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set Main Photo",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "{{url}}/api/photos/yfua6kmnvdtihcrq9bhp/setmain",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"photos",
								"yfua6kmnvdtihcrq9bhp",
								"setmain"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/profiles/bob",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"profiles",
								"bob"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Profile Tom",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/profiles/tom",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"profiles",
								"tom"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Photo Tom",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{tom_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "File",
									"type": "file",
									"src": "/e/media/wallpapers/akame-ga-kill_03.jpg"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/photos",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"photos"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Module 18",
			"item": [
				{
					"name": "Login as bob and save token to env",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const user = pm.response.json();",
									"",
									"pm.test(\"Has properties\", function () {",
									"    pm.expect(user).to.have.property('displayName');",
									"    pm.expect(user).to.have.property('username');",
									"    pm.expect(user).to.have.property('image');",
									"    pm.expect(user).to.have.property('token');",
									"});",
									"",
									"if (pm.test(\"Has properties\")) {",
									"    pm.globals.set('token', user.token);",
									"}",
									"",
									"pm.test(\"Global token has been set\", function() {",
									"    var token = pm.globals.get('token');",
									"    pm.expect(token).to.eql(user.token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"bob@test.com\",\n\t\"password\": \"Pa$$w0rd\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/account/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User Bio",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"displayName\": \"Bob 2\"\n\t,\"bio\": \"abc\\n\\ndef\\n\\nghi\\n\\njkl\"\n\t// ,\"bio\": \"\"\n\t// ,\"bio\": null\n\t// \"bio\": null\n}"
						},
						"url": {
							"raw": "{{url}}/api/profiles",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"profiles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/profiles/bob",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"profiles",
								"bob"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Module 20",
			"item": [
				{
					"name": "Login as bob and save token to env",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const user = pm.response.json();",
									"",
									"pm.test(\"Has properties\", function () {",
									"    pm.expect(user).to.have.property('displayName');",
									"    pm.expect(user).to.have.property('username');",
									"    pm.expect(user).to.have.property('image');",
									"    pm.expect(user).to.have.property('token');",
									"});",
									"",
									"if (pm.test(\"Has properties\")) {",
									"    pm.globals.set('token', user.token);",
									"}",
									"",
									"pm.test(\"Global token has been set\", function() {",
									"    var token = pm.globals.get('token');",
									"    pm.expect(token).to.eql(user.token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"bob@test.com\",\n\t\"password\": \"Pa$$w0rd\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/account/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as tom and save token to env",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const user = pm.response.json();",
									"",
									"pm.test(\"Has properties\", function () {",
									"    pm.expect(user).to.have.property('displayName');",
									"    pm.expect(user).to.have.property('username');",
									"    pm.expect(user).to.have.property('image');",
									"    pm.expect(user).to.have.property('token');",
									"});",
									"",
									"if (pm.test(\"Has properties\")) {",
									"    pm.globals.set('tom_token', user.token);",
									"}",
									"",
									"pm.test(\"Global token has been set\", function() {",
									"    var token = pm.globals.get('tom_token');",
									"    pm.expect(token).to.eql(user.token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"tom@test.com\",\n\t\"password\": \"Pa$$w0rd\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/account/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Bob's Profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/profiles/bob",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"profiles",
								"bob"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Tom's Profile as Bob",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/profiles/tom",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"profiles",
								"tom"
							]
						}
					},
					"response": []
				},
				{
					"name": "Follow tom",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/follow/tom",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"follow",
								"tom"
							]
						}
					},
					"response": []
				},
				{
					"name": "Unfollow tom",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/profiles/tom/follow",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"profiles",
								"tom",
								"follow"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Bob's Followings",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/follow/bob?predicate=following",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"follow",
								"bob"
							],
							"query": [
								{
									"key": "predicate",
									"value": "following"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Bob's Followers",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/follow/bob?predicate=followers",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"follow",
								"bob"
							],
							"query": [
								{
									"key": "predicate",
									"value": "followers"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Tom's Followings",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/follow/tom?predicate=following",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"follow",
								"tom"
							],
							"query": [
								{
									"key": "predicate",
									"value": "following"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Tom's Followers",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/follow/tom?predicate=followers",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"follow",
								"tom"
							],
							"query": [
								{
									"key": "predicate",
									"value": "followers"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Follow bob as tom",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{tom_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/follow/bob",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"follow",
								"bob"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Module 21",
			"item": [
				{
					"name": "Login as bob and save token to env",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const user = pm.response.json();",
									"",
									"pm.test(\"Has properties\", function () {",
									"    pm.expect(user).to.have.property('displayName');",
									"    pm.expect(user).to.have.property('username');",
									"    pm.expect(user).to.have.property('image');",
									"    pm.expect(user).to.have.property('token');",
									"});",
									"",
									"if (pm.test(\"Has properties\")) {",
									"    pm.globals.set('token', user.token);",
									"}",
									"",
									"pm.test(\"Global token has been set\", function() {",
									"    var token = pm.globals.get('token');",
									"    pm.expect(token).to.eql(user.token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"bob@test.com\",\n\t\"password\": \"Pa$$w0rd\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/account/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Activities no queryString",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"",
									"pm.test('response is 200', function () {",
									"    pm.response.to.have.status(200);",
									"})",
									"",
									"pm.test(\"has all properties\", function() {",
									"    pm.expect(data[0]).to.have.property('id');",
									"    pm.expect(data[0]).to.have.property('title');",
									"    pm.expect(data[0]).to.have.property('description');",
									"    pm.expect(data[0]).to.have.property('date');",
									"    pm.expect(data[0]).to.have.property('city');",
									"    pm.expect(data[0]).to.have.property('venue');",
									"    pm.expect(data[0]).to.have.property('attendees');",
									"});",
									"",
									"pm.test('activity count greater than zero', function () {",
									"    pm.expect(data.activityCount).to.be.above(0);",
									"})",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/activities",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Activities pageSIze 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"",
									"pm.test('response is 200', function () {",
									"    pm.response.to.have.status(200);",
									"})",
									"",
									"pm.test(\"has all properties\", function() {",
									"    pm.expect(data[0]).to.have.property('id');",
									"    pm.expect(data[0]).to.have.property('title');",
									"    pm.expect(data[0]).to.have.property('description');",
									"    pm.expect(data[0]).to.have.property('date');",
									"    pm.expect(data[0]).to.have.property('city');",
									"    pm.expect(data[0]).to.have.property('venue');",
									"    pm.expect(data[0]).to.have.property('attendees');",
									"});",
									"",
									"pm.test('activity count greater than zero', function () {",
									"    pm.expect(data.activityCount).to.be.above(0);",
									"})",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/activities?pageSIze=2",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities"
							],
							"query": [
								{
									"key": "pageSIze",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Activities pageSIze 2 pageNumber 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"",
									"pm.test('response is 200', function () {",
									"    pm.response.to.have.status(200);",
									"})",
									"",
									"pm.test(\"has all properties\", function() {",
									"    pm.expect(data[0]).to.have.property('id');",
									"    pm.expect(data[0]).to.have.property('title');",
									"    pm.expect(data[0]).to.have.property('description');",
									"    pm.expect(data[0]).to.have.property('date');",
									"    pm.expect(data[0]).to.have.property('city');",
									"    pm.expect(data[0]).to.have.property('venue');",
									"    pm.expect(data[0]).to.have.property('attendees');",
									"});",
									"",
									"pm.test('activity count greater than zero', function () {",
									"    pm.expect(data.activityCount).to.be.above(0);",
									"})",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/activities?pageSIze=2&pageNumber=3",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities"
							],
							"query": [
								{
									"key": "pageSIze",
									"value": "2"
								},
								{
									"key": "pageNumber",
									"value": "3"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Activities limit 5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"",
									"// response to be 200",
									"pm.test(\"response is 200\", function() {",
									"    pm.response.to.have.status(200)",
									"});",
									"",
									"pm.test(\"has all properties\", function() {",
									"    pm.expect(data.activities[0]).to.have.property('id');",
									"    pm.expect(data.activities[0]).to.have.property('title');",
									"    pm.expect(data.activities[0]).to.have.property('description');",
									"    pm.expect(data.activities[0]).to.have.property('date');",
									"    pm.expect(data.activities[0]).to.have.property('city');",
									"    pm.expect(data.activities[0]).to.have.property('venue');",
									"    pm.expect(data.activities[0]).to.have.property('attendees');",
									"});",
									"",
									"pm.test(\"activity count greater than zero\", function(){",
									"    pm.expect(data.activityCount).to.be.above(0);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/activities?limit=5",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities"
							],
							"query": [
								{
									"key": "limit",
									"value": "5"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Activities limit 5 offset 5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"",
									"// response to be 200",
									"pm.test(\"response is 200\", function() {",
									"    pm.response.to.have.status(200)",
									"});",
									"",
									"pm.test(\"has all properties\", function() {",
									"    pm.expect(data.activities[0]).to.have.property('id');",
									"    pm.expect(data.activities[0]).to.have.property('title');",
									"    pm.expect(data.activities[0]).to.have.property('description');",
									"    pm.expect(data.activities[0]).to.have.property('date');",
									"    pm.expect(data.activities[0]).to.have.property('city');",
									"    pm.expect(data.activities[0]).to.have.property('venue');",
									"    pm.expect(data.activities[0]).to.have.property('attendees');",
									"});",
									"",
									"pm.test(\"activity count greater than zero\", function(){",
									"    pm.expect(data.activityCount).to.be.above(0);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/activities?limit=2&offset=2",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities"
							],
							"query": [
								{
									"key": "limit",
									"value": "2"
								},
								{
									"key": "offset",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Activities bob is attending",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"",
									"// response to be 200",
									"pm.test(\"response is 200\", function() {",
									"    pm.response.to.have.status(200)",
									"});",
									"",
									"pm.test(\"has all properties\", function() {",
									"    pm.expect(data.activities[0]).to.have.property('id');",
									"    pm.expect(data.activities[0]).to.have.property('title');",
									"    pm.expect(data.activities[0]).to.have.property('description');",
									"    pm.expect(data.activities[0]).to.have.property('date');",
									"    pm.expect(data.activities[0]).to.have.property('city');",
									"    pm.expect(data.activities[0]).to.have.property('venue');",
									"    pm.expect(data.activities[0]).to.have.property('attendees');",
									"});",
									"",
									"pm.test(\"activity count greater than zero\", function(){",
									"    pm.expect(data.activityCount).to.be.above(0);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/activities?isgoing=true",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities"
							],
							"query": [
								{
									"key": "isgoing",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Activities bob is hosting",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"",
									"// response to be 200",
									"pm.test(\"response is 200\", function() {",
									"    pm.response.to.have.status(200)",
									"});",
									"",
									"pm.test(\"has all properties\", function() {",
									"    pm.expect(data.activities[0]).to.have.property('id');",
									"    pm.expect(data.activities[0]).to.have.property('title');",
									"    pm.expect(data.activities[0]).to.have.property('description');",
									"    pm.expect(data.activities[0]).to.have.property('date');",
									"    pm.expect(data.activities[0]).to.have.property('city');",
									"    pm.expect(data.activities[0]).to.have.property('venue');",
									"    pm.expect(data.activities[0]).to.have.property('attendees');",
									"});",
									"",
									"pm.test(\"activity count greater than zero\", function(){",
									"    pm.expect(data.activityCount).to.be.above(0);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/activities?ishost=true",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities"
							],
							"query": [
								{
									"key": "ishost",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Activities starting in 2 months time",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"",
									"// response to be 200",
									"pm.test(\"response is 200\", function() {",
									"    pm.response.to.have.status(200)",
									"});",
									"",
									"pm.test(\"has all properties\", function() {",
									"    pm.expect(data.activities[0]).to.have.property('id');",
									"    pm.expect(data.activities[0]).to.have.property('title');",
									"    pm.expect(data.activities[0]).to.have.property('description');",
									"    pm.expect(data.activities[0]).to.have.property('date');",
									"    pm.expect(data.activities[0]).to.have.property('city');",
									"    pm.expect(data.activities[0]).to.have.property('venue');",
									"    pm.expect(data.activities[0]).to.have.property('attendees');",
									"});",
									"",
									"pm.test(\"activity count greater than zero\", function(){",
									"    pm.expect(data.activityCount).to.be.above(0);",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var moment = require(\"moment\");\r",
									"\r",
									"pm.environment.set('activityDate', moment().add(2, 'months').toISOString());"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/activities?startDate={{activityDate}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities"
							],
							"query": [
								{
									"key": "startDate",
									"value": "{{activityDate}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Activities starting in 2 months time bob is going to",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"",
									"// response to be 200",
									"pm.test(\"response is 200\", function() {",
									"    pm.response.to.have.status(200)",
									"});",
									"",
									"pm.test(\"has all properties\", function() {",
									"    pm.expect(data.activities[0]).to.have.property('id');",
									"    pm.expect(data.activities[0]).to.have.property('title');",
									"    pm.expect(data.activities[0]).to.have.property('description');",
									"    pm.expect(data.activities[0]).to.have.property('date');",
									"    pm.expect(data.activities[0]).to.have.property('city');",
									"    pm.expect(data.activities[0]).to.have.property('venue');",
									"    pm.expect(data.activities[0]).to.have.property('attendees');",
									"});",
									"",
									"pm.test(\"activity count greater than zero\", function(){",
									"    pm.expect(data.activityCount).to.be.above(0);",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var moment = require(\"moment\");\r",
									"\r",
									"pm.environment.set('activityDate', moment().add(4, 'months').toISOString());"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/activities?startDate={{activityDate}}&isGoing=true",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities"
							],
							"query": [
								{
									"key": "startDate",
									"value": "{{activityDate}}"
								},
								{
									"key": "isGoing",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Activities starting 3 months ago",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"",
									"// response to be 200",
									"pm.test(\"response is 200\", function() {",
									"    pm.response.to.have.status(200)",
									"});",
									"",
									"pm.test(\"has all properties\", function() {",
									"    pm.expect(data.activities[0]).to.have.property('id');",
									"    pm.expect(data.activities[0]).to.have.property('title');",
									"    pm.expect(data.activities[0]).to.have.property('description');",
									"    pm.expect(data.activities[0]).to.have.property('date');",
									"    pm.expect(data.activities[0]).to.have.property('city');",
									"    pm.expect(data.activities[0]).to.have.property('venue');",
									"    pm.expect(data.activities[0]).to.have.property('attendees');",
									"});",
									"",
									"pm.test(\"activity count greater than zero\", function(){",
									"    pm.expect(data.activityCount).to.be.above(0);",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var moment = require(\"moment\");\r",
									"\r",
									"pm.environment.set('activityDate', moment().add(-3, 'months').toISOString());"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/activities?startDate={{activityDate}}&isGoing=true",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities"
							],
							"query": [
								{
									"key": "startDate",
									"value": "{{activityDate}}"
								},
								{
									"key": "isGoing",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Bob's Activities - all",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/profiles/bob/activities",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"profiles",
								"bob",
								"activities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Bob's Activities - past",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/profiles/bob/activities?predicate=past",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"profiles",
								"bob",
								"activities"
							],
							"query": [
								{
									"key": "predicate",
									"value": "past"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Bob's Activities - future",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/profiles/bob/activities?predicate=future",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"profiles",
								"bob",
								"activities"
							],
							"query": [
								{
									"key": "predicate",
									"value": "future"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Bob's Activities - hosting",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/profiles/bob/activities?predicate=hosting",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"profiles",
								"bob",
								"activities"
							],
							"query": [
								{
									"key": "predicate",
									"value": "hosting"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "IdentityCB",
			"item": [
				{
					"name": "Login as bob and save token to env",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const user = pm.response.json();",
									"",
									"pm.test(\"Has properties\", function () {",
									"    pm.expect(user).to.have.property('displayName');",
									"    pm.expect(user).to.have.property('username');",
									"    pm.expect(user).to.have.property('image');",
									"    pm.expect(user).to.have.property('token');",
									"});",
									"",
									"if (pm.test(\"Has properties\")) {",
									"    pm.globals.set('token', user.token);",
									"    pm.globals.set('refreshToken', user.refreshToken);",
									"}",
									"",
									"pm.test(\"Global token has been set\", function() {",
									"    var token = pm.globals.get('token');",
									"    var refreshToken = pm.globals.get('refreshToken');",
									"    pm.expect(token).to.eql(user.token);",
									"    pm.expect(refreshToken).to.eql(user.refreshToken);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"acworzytest1@gmail.com\",\n\t\"password\": \"Pa$$w0rd\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/account/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Activities",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"",
									"// response to be 200",
									"pm.test(\"response is 200\", function() {",
									"    pm.response.to.have.status(200)",
									"});",
									"",
									"pm.test(\"has all properties\", function() {",
									"    pm.expect(data[0]).to.have.property('id');",
									"    pm.expect(data[0]).to.have.property('title');",
									"    pm.expect(data[0]).to.have.property('description');",
									"    pm.expect(data[0]).to.have.property('date');",
									"    pm.expect(data[0]).to.have.property('city');",
									"    pm.expect(data[0]).to.have.property('venue');",
									"    pm.expect(data[0]).to.have.property('attendees');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/activities",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Refresh token for bob",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const user = pm.response.json();",
									"",
									"pm.test(\"Has properties\", function () {",
									"    pm.expect(user).to.have.property('displayName');",
									"    pm.expect(user).to.have.property('username');",
									"    pm.expect(user).to.have.property('image');",
									"    pm.expect(user).to.have.property('token');",
									"});",
									"",
									"if (pm.test(\"Has properties\")) {",
									"    pm.globals.set('token', user.token);",
									"    pm.globals.set('refreshToken', user.refreshToken);",
									"}",
									"",
									"pm.test(\"Global token has been set\", function() {",
									"    var token = pm.globals.get('token');",
									"    var refreshToken = pm.globals.get('refreshToken');",
									"    pm.expect(token).to.eql(user.token);",
									"    pm.expect(refreshToken).to.eql(user.refreshToken);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "{{url}}/api/account/refreshToken",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"refreshToken"
							]
						}
					},
					"response": []
				},
				{
					"name": "Regsiter new user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"displayName\": \"acworzytest1@gmail.com\",\n\t\"username\": \"acworzytest1@gmail.com\",\n\t\"email\": \"acworzytest1@gmail.com\",\n\t\"password\": \"Pa$$w0rd\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/account/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify User Email address",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"token\": \"Q2ZESjhGeHN3VDhjdytWRXNLM0NqaTBpS0FhZEZGUitqN3JpazNDRVduZ3dpSU5PcW1ZMzBxUDRzMW44ek5MRTFuRnJ0RUk3L3oyY01SR2dyTmlXcVd4UHFMRGc4aTd1clB2OHNXZmp4a0w0TXVtdmRNd2ZTVjgvZnVDbHNCRG5jY3FEQUNLM3FBdHo4VlRZek9lU0dBMXduRVZJRlRvYjZTSXdRdXhtT1gwMlp4NjE3L3hwMkhyaGltNlJCZlFTeUNpMzQwRW85bjlFclg1VmNFZjJDSmhnZStjRkxQUmd1ZkVIdG4vRlFhY0EwV1ZzaVlkelBOc0pNV2lMYnVXRUhnUlFvQT09\",\n\t\"email\": \"nru02096@eoopy.com\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/account/verifyEmail?token=Q2ZESjhLenNkZDUrTWZoSHVObFovTjBBU0Vjd0FsaTJ0VWd1NEt1dkhpNFRhMHc1eEQ5ZFJTVjFSVHU4RXZZNjFSNWh1M2dtM1E4Rjd2OGx4SzFCK0FlSEpWUWJBcG1vUEw5YVpvYU81WTdjcjJpa1UwSjR4RklOZW9XWXlLT0VMTWNlUVdQUTBEMGs5SGEwSEM0VFhkUXNvT1d0TU9ZVFRrVlptY3pqWjZjWDVpVDFkbmdJbDZiY2xZb3lmdWJMaGhFZnJWWExIcWlURDNldE9ONy9FR3FuSDlZOFV6R3YrQWZYQmxmVGY2Tkw0WjArTi9hUFBNQSszSXQ4LzNDVG1SMElWQT09&email=acworzytest1@gmail.com",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"verifyEmail"
							],
							"query": [
								{
									"key": "token",
									"value": "Q2ZESjhLenNkZDUrTWZoSHVObFovTjBBU0Vjd0FsaTJ0VWd1NEt1dkhpNFRhMHc1eEQ5ZFJTVjFSVHU4RXZZNjFSNWh1M2dtM1E4Rjd2OGx4SzFCK0FlSEpWUWJBcG1vUEw5YVpvYU81WTdjcjJpa1UwSjR4RklOZW9XWXlLT0VMTWNlUVdQUTBEMGs5SGEwSEM0VFhkUXNvT1d0TU9ZVFRrVlptY3pqWjZjWDVpVDFkbmdJbDZiY2xZb3lmdWJMaGhFZnJWWExIcWlURDNldE9ONy9FR3FuSDlZOFV6R3YrQWZYQmxmVGY2Tkw0WjArTi9hUFBNQSszSXQ4LzNDVG1SMElWQT09"
								},
								{
									"key": "email",
									"value": "acworzytest1@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Resend verification email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/account/resendEmailConfirmationLink?email=acworzytest1@gmail.com",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"resendEmailConfirmationLink"
							],
							"query": [
								{
									"key": "email",
									"value": "acworzytest1@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Forgot Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/user/forgotPassword?email=nru02096@eoopy.com",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"user",
								"forgotPassword"
							],
							"query": [
								{
									"key": "email",
									"value": "nru02096@eoopy.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Reset Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"token\": \"Q2ZESjhGeHN3VDhjdytWRXNLM0NqaTBpS0FhZ09UNThIUW9DZDY0RVE5bFlBWWR2MExZb3FCb2pyNUlFSDhhRFlFU1NsMTQraWkrUFNSOFV3Vmt2VEsyYnBIdnNPcVppZ1ZEZlEyTzUxMSs5MHhDUmJDYjh5ZTdodlZSTnZNbUpTelREOFY4UHRucnZKZE1RaHJ2dFo1RVdEeTJia1gxNllnWjNVMUZYbWNpVlpMZE15Zk1mWkJ3Q3AxQU15emptOHRCQlJZMFhYK2JIcTBIVTFTM2FuRzFVYzRlMHFla05NQitvSDcwYXBhSFE0UjVV\",\n\t\"email\": \"nru02096@eoopy.com\",\n\t\"password\": \"Pa$$w0rd1\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/user/resetPassword",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"user",
								"resetPassword"
							],
							"query": [
								{
									"key": "token",
									"value": "Q2ZESjhGeHN3VDhjdytWRXNLM0NqaTBpS0FhZEZGUitqN3JpazNDRVduZ3dpSU5PcW1ZMzBxUDRzMW44ek5MRTFuRnJ0RUk3L3oyY01SR2dyTmlXcVd4UHFMRGc4aTd1clB2OHNXZmp4a0w0TXVtdmRNd2ZTVjgvZnVDbHNCRG5jY3FEQUNLM3FBdHo4VlRZek9lU0dBMXduRVZJRlRvYjZTSXdRdXhtT1gwMlp4NjE3L3hwMkhyaGltNlJCZlFTeUNpMzQwRW85bjlFclg1VmNFZjJDSmhnZStjRkxQUmd1ZkVIdG4vRlFhY0EwV1ZzaVlkelBOc0pNV2lMYnVXRUhnUlFvQT09",
									"disabled": true
								},
								{
									"key": "email",
									"value": "nru02096@eoopy.com",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get users - admin",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/admin/users",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"admin",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "graph.facebook.com/me",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://graph.facebook.com/me?access_token=EAAIzy0Gx6kUBO8vgbxDNbbsazqFJdoUgsrCbZBa9UEkNiRMt5VIPSsPfJN9gLKwqTazsdlzn8K1t8HSekNdPZBZCk5sFKQVSIUXuHu81M4AuHWl1AYbWVoZBgwQnw1Hqqlj9CEvGyQjcuwn1XINuY0e7F47YzQR38KWIwnuk6PmFyJQGsJi2ObpEIiLPiUDD1F2e6ZCxUF7nqEBWnmwZDZD&fields=name,email,picture.width(100).height(100)",
							"protocol": "https",
							"host": [
								"graph",
								"facebook",
								"com"
							],
							"path": [
								"me"
							],
							"query": [
								{
									"key": "access_token",
									"value": "EAAIzy0Gx6kUBO8vgbxDNbbsazqFJdoUgsrCbZBa9UEkNiRMt5VIPSsPfJN9gLKwqTazsdlzn8K1t8HSekNdPZBZCk5sFKQVSIUXuHu81M4AuHWl1AYbWVoZBgwQnw1Hqqlj9CEvGyQjcuwn1XINuY0e7F47YzQR38KWIwnuk6PmFyJQGsJi2ObpEIiLPiUDD1F2e6ZCxUF7nqEBWnmwZDZD"
								},
								{
									"key": "fields",
									"value": "name,email,picture.width(100).height(100)"
								}
							]
						}
					},
					"response": [
						{
							"name": "New Request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.facebook.com/me?access_token=EAAIzy0Gx6kUBO8vgbxDNbbsazqFJdoUgsrCbZBa9UEkNiRMt5VIPSsPfJN9gLKwqTazsdlzn8K1t8HSekNdPZBZCk5sFKQVSIUXuHu81M4AuHWl1AYbWVoZBgwQnw1Hqqlj9CEvGyQjcuwn1XINuY0e7F47YzQR38KWIwnuk6PmFyJQGsJi2ObpEIiLPiUDD1F2e6ZCxUF7nqEBWnmwZDZD&fields=name,email,picture.width(100).height(100)",
									"protocol": "https",
									"host": [
										"graph",
										"facebook",
										"com"
									],
									"path": [
										"me"
									],
									"query": [
										{
											"key": "access_token",
											"value": "EAAIzy0Gx6kUBO8vgbxDNbbsazqFJdoUgsrCbZBa9UEkNiRMt5VIPSsPfJN9gLKwqTazsdlzn8K1t8HSekNdPZBZCk5sFKQVSIUXuHu81M4AuHWl1AYbWVoZBgwQnw1Hqqlj9CEvGyQjcuwn1XINuY0e7F47YzQR38KWIwnuk6PmFyJQGsJi2ObpEIiLPiUDD1F2e6ZCxUF7nqEBWnmwZDZD"
										},
										{
											"key": "fields",
											"value": "name,email,picture.width(100).height(100)"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Encoding",
									"value": "br"
								},
								{
									"key": "ETag",
									"value": "\"d9800a7cec32e4a245015006ef8a3fed736094a2\""
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "cross-origin-resource-policy",
									"value": "cross-origin"
								},
								{
									"key": "x-app-usage",
									"value": "{\"call_count\":1,\"total_cputime\":0,\"total_time\":0}"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "facebook-api-version",
									"value": "v19.0"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; preload"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Cache-Control",
									"value": "private, no-cache, no-store, must-revalidate"
								},
								{
									"key": "Expires",
									"value": "Sat, 01 Jan 2000 00:00:00 GMT"
								},
								{
									"key": "x-fb-request-id",
									"value": "Aw-X-na82hR1pddYtAu75Fe"
								},
								{
									"key": "x-fb-trace-id",
									"value": "CyVNtIurFM7"
								},
								{
									"key": "x-fb-rev",
									"value": "1012111715"
								},
								{
									"key": "X-FB-Debug",
									"value": "w/4FZQWGXwaqNxx5x4LtEEO4mznQ8+2fyMUubfEuXkg5+zMMZOUhjdNo3pFMvPUZbuTzkSA6X0u29ztC7w2BVA=="
								},
								{
									"key": "Date",
									"value": "Sun, 17 Mar 2024 10:08:01 GMT"
								},
								{
									"key": "X-FB-Connection-Quality",
									"value": "EXCELLENT; q=0.9, rtt=8, rtx=0, c=10, mss=1380, tbw=3402, tp=-1, tpl=-1, uplat=249, ullat=0"
								},
								{
									"key": "Alt-Svc",
									"value": "h3=\":443\"; ma=86400"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Content-Length",
									"value": "263"
								}
							],
							"cookie": [],
							"body": "{\n    \"name\": \"Sandrino Patrulescu\",\n    \"email\": \"sandryno_sandryno@yahoo.com\",\n    \"picture\": {\n        \"data\": {\n            \"height\": 100,\n            \"is_silhouette\": false,\n            \"url\": \"https://platform-lookaside.fbsbx.com/platform/profilepic/?asid=2759512627539485&height=100&width=100&ext=1713262081&hash=AfpywkNi5Mo1XofPPxrFV5ezXkexcZcXbX-lAL2cvQprLg\",\n            \"width\": 100\n        }\n    },\n    \"id\": \"2759512627539485\"\n}"
						}
					]
				},
				{
					"name": "mailersend",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest",
								"disabled": true
							},
							{
								"key": "Authorization",
								"value": "Bearer mlsn.8340cdb80c7c5a5efbe54259488a18b80f0faf149c5f2055316112d8e60e292f"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"from\": {\n        \"email\": \"info@trial-7dnvo4d35nrg5r86.mlsender.net\"\n        // \"email\": \"cinepoatevedea@mail.com\" // doesn't work\n    },\n    \"to\": [\n        {\n            // \"email\": \"tobbiet@tjmckenziecompany.com\"\n            \"email\": \"acworzytest1@gmail.com\"\n        }\n    ],\n    \"subject\": \"Hello from MailerSend!\",\n    // \"text\": \"Greetings from the team, you got this message through MailerSend.\"\n    \"html\": \"Greetings from the team, you got this message through MailerSend.\"\n}"
						},
						"url": {
							"raw": "https://api.mailersend.com/v1/email",
							"protocol": "https",
							"host": [
								"api",
								"mailersend",
								"com"
							],
							"path": [
								"v1",
								"email"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "http://localhost:5000"
		}
	]
}